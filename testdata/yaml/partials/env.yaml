name: testEnvironment
qualifier: testQualifier

description: This is my awesome Ekara environment.

ekara:
  base: someBase
  distribution:
    repository: ekara-platform/distribution
    ref: 1.2.3

tasks:
  task1:
    cron: task1_cron
    playbook: task1_playbook
    params:
      tasks_task1_param_key1: tasks_task1_param_key1_value
      tasks_task1_param_key2: tasks_task1_param_key2_value
    env:
      tasks_task1_env_key1: tasks_task1_env_key1_value
      tasks_task1_env_key2: tasks_task1_env_key2_value

nodes:
  node1:
    instances: 10
    provider:
      name: aws
      params:
        provider_node1_param_key1: provider_node1_param_key1_value
        provider_node1_param_key2: provider_node1_param_key2_value
      env:
        provider_node1_env_key1: provider_node1_env_key1_value
        provider_node1_env_key2: provider_node1_env_key2_value
    orchestrator:
      params:
        orchestrator_node1_param_key1: orchestrator_node1_param_key1_value
        orchestrator_node1_param_key2: orchestrator_node1_param_key2_value
      docker:
        docker_node1_param_key1: docker_node1_param_key1_value
        docker_node1_param_key2: docker_node1_param_key2_value
      env:
        orchestrator_node1_env_key1: orchestrator_node1_env_key1_value
        orchestrator_node1_env_key2: orchestrator_node1_env_key2_value
    volumes:
    - path: "some/volume/path"
      params:
        param1_name: aws_param1_name_value
    - path: "other/volume/path"
      params:
        param2_name: aws_param2_name_value
    labels:
      node1_label1: node1_label1_value
      node1_label2: node1_label2_value
    hooks:
      provision:
        before:
        - task: task1
        after:
        - task: task2
		  params:
            tasks_task2_param_key1: tasks_task2_param_key1_value_overwritten
            tasks_task2_param_key3: tasks_task2_param_key3_value
          env:
            tasks_task2_env_key1: tasks_task2_env_key1_value_overwritten
            tasks_task2_env_key3: tasks_task2_env_key3_value
      destroy:
        before:
        - task: task1
        after:
        - task: task2
  node2:
    instances: 20
    provider:
      name: azure
      params:
        provider_node2_param_key1: provider_node2_param_key1_value
        provider_node2_param_key2: provider_node2_param_key2_value
      env:
        provider_node2_env_key1: provider_node2_env_key1_value
        provider_node2_env_key2: provider_node2_env_key2_value
    orchestrator:
      params:
        orchestrator_node2_param_key1: orchestrator_node2_param_key1_value
        orchestrator_node2_param_key2: orchestrator_node2_param_key2_value
      docker:
        docker_node2_param_key1: docker_node2_param_key1_value
        docker_node2_param_key2: docker_node2_param_key2_value
      env:
        orchestrator_node2_env_key1: orchestrator_node2_env_key1_value
        orchestrator_node2_env_key2: orchestrator_node2_env_key2_value
    volumes:
    - path: "some/volume/path"
      params:
        param1_name: azure_param1_name_value
    - path: "other/volume/path"
      params:
        param2_name: azure_param2_name_value
    labels:
      node2_label1: node2_label1_value
      node2_label2: node2_label2_value
    hooks:
      provision:
        before:
        - task: task1
        after:
        - task: task2
		
      destroy:
        before:
        - task: task1
        after:
        - task: task2

stacks:
  stack2:
    component: stack2
    params:
      stack2_param_key1: stack2_param_key1_value
      stack2_param_key2: stack2_param_key2_value
    env:
      stack2_env_key1: stack2_env_key1_value
      stack2_env_key2: stack2_env_key2_value
