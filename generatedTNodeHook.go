package model

//*****************************************************************************
//
//     _         _           ____                           _           _
//    / \  _   _| |_ ___    / ___| ___ _ __   ___ _ __ __ _| |_ ___  __| |
//   / _ \| | | | __/ _ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` |
//  / ___ \ |_| | || (_) | | |_| |  __/ | | |  __/ | | (_| | ||  __/ (_| |
// /_/   \_\__,_|\__\___/   \____|\___|_| |_|\___|_|  \__,_|\__\___|\__,_|
//
// This file is autogenerated by "go generate .". Do not modify.
//
//*****************************************************************************

// ----------------------------------------------------
// Implementation(s) of TNodeHook
// ----------------------------------------------------

//TNodeHookOnNodeHookHolder is the struct containing the NodeHook in order to implement TNodeHook
type TNodeHookOnNodeHookHolder struct {
	h NodeHook
}

//CreateTNodeHookForNodeHook returns an holder of NodeHook implementing TNodeHook
func CreateTNodeHookForNodeHook(o NodeHook) TNodeHookOnNodeHookHolder {
	return TNodeHookOnNodeHookHolder{
		h: o,
	}
}

//HasCreate returns true if the hooks has tasks while creating
func (r TNodeHookOnNodeHookHolder) HasCreate() bool {
	return r.h.Create.HasTasks()
}

//Create returns the creating tasks
func (r TNodeHookOnNodeHookHolder) Create() THook {
	return CreateTHookForHook(r.h.Create)
}
